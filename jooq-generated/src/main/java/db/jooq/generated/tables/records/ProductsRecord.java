/*
 * This file is generated by jOOQ.
 */
package db.jooq.generated.tables.records;


import db.jooq.generated.tables.Products;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record4<Integer, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products.id</code>.
     */
    public ProductsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.products.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.products.name</code>.
     */
    public ProductsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.products.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.products.manufacturer_id</code>.
     */
    public ProductsRecord setManufacturerId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.products.manufacturer_id</code>.
     */
    public Integer getManufacturerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.products.quantity</code>.
     */
    public ProductsRecord setQuantity(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.products.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Products.PRODUCTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Products.PRODUCTS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Products.PRODUCTS.MANUFACTURER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Products.PRODUCTS.QUANTITY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getManufacturerId();
    }

    @Override
    public Integer component4() {
        return getQuantity();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getManufacturerId();
    }

    @Override
    public Integer value4() {
        return getQuantity();
    }

    @Override
    public ProductsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductsRecord value3(Integer value) {
        setManufacturerId(value);
        return this;
    }

    @Override
    public ProductsRecord value4(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public ProductsRecord values(Integer value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Integer id, String name, Integer manufacturerId, Integer quantity) {
        super(Products.PRODUCTS);

        setId(id);
        setName(name);
        setManufacturerId(manufacturerId);
        setQuantity(quantity);
    }
}
